/* Generated by the Nim Compiler v0.19.0 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI129048 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI131710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI131725 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI131682 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI27057 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI131065 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI131466 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI131430 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI131215 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI131604 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI131587 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130900 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130846 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36420 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI130803 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130739 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15346 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3918 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI3912 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130704 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130180 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25391 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25387 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25383 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25379 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25375 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25371 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25363 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25359 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25355 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25351 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25347 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25343 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25339 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25335 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25331 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25327 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25323 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25319 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI25204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25260 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25218 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI25452 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25450 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25448 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI25248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25246 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25499 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25542 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI25254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25252 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI3808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25216 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25214 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI25230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI25228 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI130178 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI130177 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI131570 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NNI25216 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI25216.node = NNI25216;
var NNI3808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3808.node = NNI3808;
NTI25216.base = NTI3808;
NTI25214.base = NTI25216;
NTI25542.base = NTI25228;
var NNI25254 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action", len: 0, typ: NTI140, name: "action", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI140, name: "encoding", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI140, name: "method", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI140, name: "target", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI25542, name: "elements", sons: null}]};
NTI25254.node = NNI25254;
NTI25254.base = NTI25230;
NTI25252.base = NTI25254;
var NNI25248 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI130, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI130, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI104, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI140, name: "value", sons: null}]};
NTI25248.node = NNI25248;
NTI25248.base = NTI25230;
NTI25246.base = NTI25248;
NTI25499.base = NTI25246;
var NNI25230 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI25214, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI130, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI130, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI140, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI130, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI25252, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI130, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI25499, name: "options", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI104, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI104, name: "clientHeight", sons: null}]};
NTI25230.node = NNI25230;
NTI25220.base = NTI25222;
NTI25448.base = NTI25220;
NTI25450.base = NTI25220;
NTI25452.base = NTI25220;
var NNI25218 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI25218, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI25218, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI25218, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI25218, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI25218, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI25218, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI25218, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI25218, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI25218, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI25218, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI25218, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI25218, name: "NotationNode", len: 0, sons: null}}};
NTI25218.node = NNI25218;
var NNI25262 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI140, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI140, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI25262.node = NNI25262;
NTI25262.base = NTI3808;
NTI25260.base = NTI25262;
var NNI25222 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI25448, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI25450, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI25452, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI25220, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI25220, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI25220, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI25218, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI25220, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI25220, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI25260, name: "style", sons: null}]};
NTI25222.node = NNI25222;
var NNI25204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI25319, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI25323, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI25327, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI25331, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI25335, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI25339, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI25343, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI25347, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI25351, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI25355, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI25359, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI25363, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI25367, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI25371, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI25375, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI25379, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI25383, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI25387, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI25391, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI25395, name: "onunload", sons: null}]};
NTI25204.node = NNI25204;
NTI25204.base = NTI3808;
NTI25222.base = NTI25204;
NTI25230.base = NTI25222;
NTI25228.base = NTI25230;
NTI130180.base = NTI130177;
var NNI130178 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "heading", len: 0, typ: NTI25228, name: "heading", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI130180, name: "kids", sons: null}, 
{kind: 1, offset: "sortId", len: 0, typ: NTI104, name: "sortId", sons: null}, 
{kind: 1, offset: "doSort", len: 0, typ: NTI130, name: "doSort", sons: null}]};
NTI130178.node = NNI130178;
NTI130177.base = NTI130178;
NTI131570.base = NTI130177;
NTI130704.base = NTI130177;
var NNI3846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3846.node = NNI3846;
var NNI3842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3842.node = NNI3842;
var NNI3828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3828.node = NNI3828;
NTI3912.base = NTI3826;
NTI3918.base = NTI3826;
var NNI3826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3912, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raise_id", len: 0, typ: NTI114, name: "raise_id", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3918, name: "up", sons: null}]};
NTI3826.node = NNI3826;
NTI3826.base = NTI3808;
NTI3828.base = NTI3826;
NTI3842.base = NTI3828;
NTI3846.base = NTI3842;
var NNI15346 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI15346.node = NNI15346;
NTI130739.base = NTI130177;
NTI130803.base = NTI104;
var NNI3858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3858.node = NNI3858;
NTI3858.base = NTI3828;
NTI130846.base = NTI130177;
NTI130900.base = NTI130177;
NTI131587.base = NTI25228;
NTI131604.base = NTI25228;
NTI131215.base = NTI130177;
NTI131430.base = NTI130177;
NTI131466.base = NTI130177;
var NNI3850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3850.node = NNI3850;
NTI3850.base = NTI3828;
NTI131065.base = NTI130177;
NTI27057.base = NTI25228;
NTI131682.base = NTI140;
var NNI131710 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI25228, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI131710.node = NNI131710;
NTI131725.base = NTI131710;
var NNI3862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3862.node = NNI3862;
NTI3862.base = NTI3828;
var NNI129048 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI130, name: "Field1", sons: null}]};
NTI129048.node = NNI129048;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_17230, src_17231, ti_17232) {
	var result_17655 = null;

		switch (ti_17232.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_17201(ti_17232))) {
			result_17655 = src_17231;
			}
			else {
				result_17655 = [src_17231[0], src_17231[1]];
			}
			
			break;
		case 19:
			      if (dest_17230 === null || dest_17230 === undefined) {
        dest_17230 = {};
      }
      else {
        for (var key in dest_17230) { delete dest_17230[key]; }
      }
      for (var key in src_17231) { dest_17230[key] = src_17231[key]; }
      result_17655 = dest_17230;
    
			break;
		case 18:
		case 17:
			if (!((ti_17232.base == null))) {
			result_17655 = nimCopy(dest_17230, src_17231, ti_17232.base);
			}
			else {
			if ((ti_17232.kind == 17)) {
			result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {m_type: ti_17232} : dest_17230;
			}
			else {
				result_17655 = (dest_17230 === null || dest_17230 === undefined) ? {} : dest_17230;
			}
			}
			nimCopyAux(result_17655, src_17231, ti_17232.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_17231 === null) {
        result_17655 = null;
      }
      else {
        if (dest_17230 === null || dest_17230 === undefined) {
          dest_17230 = new Array(src_17231.length);
        }
        else {
          dest_17230.length = src_17231.length;
        }
        result_17655 = dest_17230;
        for (var i = 0; i < src_17231.length; ++i) {
          result_17655[i] = nimCopy(result_17655[i], src_17231[i], ti_17232.base);
        }
      }
    
			break;
		case 28:
			      if (src_17231 !== null) {
        result_17655 = src_17231.slice(0);
      }
    
			break;
		default: 
			result_17655 = src_17231;
			break;
		}

	return result_17655;

}

function makeNimstrLit(c_16225) {
		  var ln = c_16225.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_16225.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_17716, value_17717, typ_17718) {
		    var result = new Array(len_17716);
    for (var i = 0; i < len_17716; ++i) result[i] = nimCopy(null, value_17717, typ_17718);
    return result;
  

	
}

function cstrToNimstr(c_16242) {
		  var ln = c_16242.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_16242.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_16242.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_16259) {
		  var len = s_16259.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_16259[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_16259[i] < 128)
      asciiPart[i] = fcc(s_16259[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_15818, ename_15819) {
		e_15818.name = ename_15819;
		if ((excHandler == 0)) {
		unhandledException(e_15818);
		}
		
		e_15818.trace = nimCopy(null, raw_write_stack_trace_15655(), NTI138);
		throw e_15818;

	
}

function addInt(a_16603, b_16604) {
		    var result = a_16603 + b_16604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_17735, a_17736, b_17737) {
			var Tmp1;

	var result_17738 = 0;

	BeforeRet: do {
			if (!(a_17736 <= i_17735)) Tmp1 = false; else {				Tmp1 = (i_17735 <= b_17737);			}		if (Tmp1) {
		result_17738 = i_17735;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_17738;

}

function subInt(a_16621, b_16622) {
		    var result = a_16621 - b_16622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_17754, a_17755, b_17756) {
			var Tmp1;

	var result_17757 = 0;

	BeforeRet: do {
			if (!(a_17755 <= i_17754)) Tmp1 = false; else {				Tmp1 = (i_17754 <= b_17756);			}		if (Tmp1) {
		result_17757 = i_17754;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_17757;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_16639, b_16640) {
		    var result = a_16639 * b_16640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_16958, b_16959) {
		var Tmp1;

	var result_16960 = 0;

	BeforeRet: do {
		if ((b_16959 <= a_16958)) {
		Tmp1 = a_16958;
		}
		else {
		Tmp1 = b_16959;
		}
		
		result_16960 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_16960;

}

function nimMin(a_16940, b_16941) {
		var Tmp1;

	var result_16942 = 0;

	BeforeRet: do {
		if ((a_16940 <= b_16941)) {
		Tmp1 = a_16940;
		}
		else {
		Tmp1 = b_16941;
		}
		
		result_16942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_16942;

}
var nimvm_7173 = false;
var nim_program_result = 0;
var global_raise_hook_13418 = [null];
var local_raise_hook_13423 = [null];
var out_of_mem_hook_13426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var dorender_27091 = [null];
var draw_timeout_27092 = [null];
var current_tree_27093 = [null];
var link_counter_27556 = [0];
var radio_counter_28052 = [0];
var alternative_131515 = [null];

function is_fat_pointer_17201(ti_17203) {
	var result_17204 = false;

	BeforeRet: do {
		result_17204 = !((ConstSet1[ti_17203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_17204;

}

function nimCopyAux(dest_17235, src_17236, n_17238) {
		switch (n_17238.kind) {
		case 0:
			break;
		case 1:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
    
			break;
		case 2:
			L1: do {
				var i_17628 = 0;
				var colontmp__17630 = 0;
				colontmp__17630 = (n_17238.len - 1);
				var res_17633 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_17633 <= colontmp__17630)) break L3;
							i_17628 = res_17633;
							nimCopyAux(dest_17235, src_17236, n_17238.sons[i_17628]);
							res_17633 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_17235[n_17238.offset] = nimCopy(dest_17235[n_17238.offset], src_17236[n_17238.offset], n_17238.typ);
      for (var i = 0; i < n_17238.sons.length; ++i) {
        nimCopyAux(dest_17235, src_17236, n_17238.sons[i][1]);
      }
    
			break;
		}

	
}

function add_13438(x_13441, x_13441_Idx, y_13442) {
		      if (x_13441[x_13441_Idx] === null) { x_13441[x_13441_Idx] = []; }
      var off = x_13441[x_13441_Idx].length;
      x_13441[x_13441_Idx].length += y_13442.length;
      for (var i = 0; i < y_13442.length; ++i) {
        x_13441[x_13441_Idx][off+i] = y_13442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_15341(f_15343) {
					var Tmp3;

	var result_15344 = [null];

		var it_15352 = f_15343;
		var i_15354 = 0;
		var total_15356 = 0;
		var temp_frames_15363 = arrayConstr(64, {Field0: null, Field1: 0}, NTI15346);
		L1: do {
				L2: while (true) {
					if (!!((it_15352 == null))) Tmp3 = false; else {						Tmp3 = (i_15354 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_15363[i_15354].Field0 = it_15352.procname;
					temp_frames_15363[i_15354].Field1 = it_15352.line;
					i_15354 += 1;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_15352 == null))) break L5;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		result_15344[0] = nimCopy(null, [], NTI138);
		if (!((total_15356 == i_15354))) {
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("(")); } else { result_15344[0] = makeNimstrLit("("); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr(((total_15356 - i_15354))+"")); } else { result_15344[0] = cstrToNimstr(((total_15356 - i_15354))+"").slice(); };
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_15344[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_15628 = 0;
			var colontmp__15635 = 0;
			colontmp__15635 = (i_15354 - 1);
			var res_15638 = colontmp__15635;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_15638)) break L8;
						j_15628 = res_15638;
						add_13438(result_15344, 0, temp_frames_15363[j_15628].Field0);
						if ((0 < temp_frames_15363[j_15628].Field1)) {
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit(", line: ")); } else { result_15344[0] = makeNimstrLit(", line: "); };
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(cstrToNimstr((temp_frames_15363[j_15628].Field1)+"")); } else { result_15344[0] = cstrToNimstr((temp_frames_15363[j_15628].Field1)+"").slice(); };
						}
						
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0]).concat(makeNimstrLit("\x0A")); } else { result_15344[0] = makeNimstrLit("\x0A"); };
						res_15638 -= 1;
					}
			} while(false);
		} while(false);

	return result_15344[0];

}

function raw_write_stack_trace_15655() {
	var result_15657 = null;

		if (!((framePtr == null))) {
		result_15657 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A")).concat(aux_write_stack_trace_15341(framePtr)), NTI138);
		}
		else {
			result_15657 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_15657;

}

function unhandledException(e_15719) {
		var buf_15720 = [[]];
		if (!(((e_15719.message != null ? e_15719.message.length : 0) == 0))) {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(e_15719.message); } else { buf_15720[0] = e_15719.message.slice(); };
		}
		else {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit(" [")); } else { buf_15720[0] = makeNimstrLit(" ["); };
		add_13438(buf_15720, 0, e_15719.name);
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(makeNimstrLit("]\x0A")); } else { buf_15720[0] = makeNimstrLit("]\x0A"); };
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0]).concat(raw_write_stack_trace_15655()); } else { buf_15720[0] = raw_write_stack_trace_15655().slice(); };
		var cbuf_15801 = toJSStr(buf_15720[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_15801);
  }
  else {
    throw cbuf_15801;
  }
  

	
}

function raiseOverflow() {
		var e_16065 = null;
		e_16065 = {m_type: NTI3846, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16065.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_16065.parent = null;
		raiseException(e_16065, "OverflowError");

	
}

function is_whitespace_130652(text_130654) {
		     return !/[^\s]/.test(text_130654);
  

	
}

function is_whitespace_130669(x_130671) {
		var Tmp1;
		var Tmp2;

	var result_130672 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 102;
		if (!(x_130671.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_130652(x_130671.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_130671.nodeName == "#comment");		}		result_130672 = Tmp1;
	framePtr = F.prev;

	return result_130672;

}

function raiseIndexError() {
		var e_16155 = null;
		e_16155 = {m_type: NTI3858, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16155.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_16155.parent = null;
		raiseException(e_16155, "IndexError");

	
}

function to_toc_130686(x_130688, father_130689) {
						var Tmp5;
						var Tmp6;
						var Tmp7;
			var Tmp15;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_130688.nodeName == "UL")) {
		F.line = 107;
		var f_130712 = {heading: null, kids: nimCopy(null, [], NTI130704), sortId: (father_130689.kids != null ? father_130689.kids.length : 0), doSort: false};
		F.line = 108;
		var i_130714 = 0;
		L1: do {
			F.line = 109;
				L2: while (true) {
				if (!(i_130714 < x_130688.childNodes.length)) break L2;
					F.line = 110;
					var nxt_130715 = addInt(i_130714, 1);
					L3: do {
						F.line = 111;
							L4: while (true) {
							if (!((nxt_130715 < x_130688.childNodes.length) && is_whitespace_130669(x_130688.childNodes[nxt_130715]))) break L4;
								F.line = 112;
								nxt_130715 = addInt(nxt_130715, 1);
							}
					} while(false);
						if (!(nxt_130715 < x_130688.childNodes.length)) Tmp7 = false; else {							Tmp7 = (x_130688.childNodes[i_130714].nodeName == "LI");						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_130688.childNodes[i_130714].childNodes.length == 1);						}						if (!Tmp6) Tmp5 = false; else {							Tmp5 = (x_130688.childNodes[nxt_130715].nodeName == "UL");						}					if (Tmp5) {
					F.line = 115;
					var e_130747 = {heading: x_130688.childNodes[i_130714].childNodes[0], kids: nimCopy(null, [], NTI130739), sortId: (f_130712.kids != null ? f_130712.kids.length : 0), doSort: false};
					F.line = 116;
					var it_130748 = x_130688.childNodes[nxt_130715];
					L8: do {
						F.line = 117;
						var j_130758 = 0;
						F.line = 3527;
						var colontmp__130923 = 0;
						F.line = 117;
						colontmp__130923 = it_130748.childNodes.length;
						F.line = 3528;
						var i_130926 = 0;
						L9: do {
							F.line = 3529;
								L10: while (true) {
								if (!(i_130926 < colontmp__130923)) break L10;
									F.line = 3530;
									j_130758 = i_130926;
									F.line = 118;
									to_toc_130686(it_130748.childNodes[j_130758], e_130747);
									F.line = 3531;
									i_130926 = addInt(i_130926, 1);
								}
						} while(false);
					} while(false);
					F.line = 119;
					if (f_130712.kids != null) { f_130712.kids.push(e_130747); } else { f_130712.kids = [e_130747]; };
					F.line = 120;
					i_130714 = addInt(nxt_130715, 1);
					}
					else {
						F.line = 122;
						to_toc_130686(x_130688.childNodes[i_130714], f_130712);
						F.line = 123;
						i_130714 = addInt(i_130714, 1);
					}
					
				}
		} while(false);
		F.line = 124;
		if (father_130689.kids != null) { father_130689.kids.push(f_130712); } else { father_130689.kids = [f_130712]; };
		}
		else {
		if (is_whitespace_130669(x_130688)) {
		}
		else {
		if ((x_130688.nodeName == "LI")) {
		F.line = 128;
		var idx_130804 = nimCopy(null, [], NTI130803);
		L11: do {
			F.line = 129;
			var i_130814 = 0;
			F.line = 3527;
			var colontmp__130929 = 0;
			F.line = 129;
			colontmp__130929 = x_130688.childNodes.length;
			F.line = 3528;
			var i_130932 = 0;
			L12: do {
				F.line = 3529;
					L13: while (true) {
					if (!(i_130932 < colontmp__130929)) break L13;
						F.line = 3530;
						i_130814 = i_130932;
						if (!(is_whitespace_130669(x_130688.childNodes[i_130814]))) {
						F.line = 130;
						var Tmp14 = nimCopy(null, i_130814, NTI36420);
						if (idx_130804 != null) { idx_130804.push(Tmp14); } else { idx_130804 = [Tmp14]; };
						}
						
						F.line = 3531;
						i_130932 = addInt(i_130932, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_130804 != null ? idx_130804.length : 0) == 2)) Tmp15 = false; else {				Tmp15 = (x_130688.childNodes[idx_130804[chckIndx(1, 0, idx_130804.length+0-1)-0]].nodeName == "UL");			}		if (Tmp15) {
		F.line = 132;
		var e_130854 = {heading: x_130688.childNodes[idx_130804[chckIndx(0, 0, idx_130804.length+0-1)-0]], kids: nimCopy(null, [], NTI130846), sortId: (father_130689.kids != null ? father_130689.kids.length : 0), doSort: false};
		F.line = 134;
		var it_130855 = x_130688.childNodes[idx_130804[chckIndx(1, 0, idx_130804.length+0-1)-0]];
		L16: do {
			F.line = 135;
			var j_130865 = 0;
			F.line = 3527;
			var colontmp__130936 = 0;
			F.line = 135;
			colontmp__130936 = it_130855.childNodes.length;
			F.line = 3528;
			var i_130939 = 0;
			L17: do {
				F.line = 3529;
					L18: while (true) {
					if (!(i_130939 < colontmp__130936)) break L18;
						F.line = 3530;
						j_130865 = i_130939;
						F.line = 136;
						to_toc_130686(it_130855.childNodes[j_130865], e_130854);
						F.line = 3531;
						i_130939 = addInt(i_130939, 1);
					}
			} while(false);
		} while(false);
		F.line = 137;
		if (father_130689.kids != null) { father_130689.kids.push(e_130854); } else { father_130689.kids = [e_130854]; };
		}
		else {
			L19: do {
				F.line = 139;
				var i_130885 = 0;
				F.line = 3527;
				var colontmp__130942 = 0;
				F.line = 139;
				colontmp__130942 = x_130688.childNodes.length;
				F.line = 3528;
				var i_130945 = 0;
				L20: do {
					F.line = 3529;
						L21: while (true) {
						if (!(i_130945 < colontmp__130942)) break L21;
							F.line = 3530;
							i_130885 = i_130945;
							F.line = 140;
							to_toc_130686(x_130688.childNodes[i_130885], father_130689);
							F.line = 3531;
							i_130945 = addInt(i_130945, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 142;
		if (father_130689.kids != null) { father_130689.kids.push({heading: x_130688, kids: nimCopy(null, [], NTI130900), sortId: (father_130689.kids != null ? father_130689.kids.length : 0), doSort: false}); } else { father_130689.kids = [{heading: x_130688, kids: nimCopy(null, [], NTI130900), sortId: (father_130689.kids != null ? father_130689.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_130192(x_130194, heading_130195, items_130198, items_130198_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_130194 == null)) {
		F.line = 49;
		break BeforeRet;
		}
		
			if (!!((x_130194.heading == null))) Tmp1 = false; else {				Tmp1 = (x_130194.heading.textContent == heading_130195);			}		if (Tmp1) {
		L2: do {
			F.line = 51;
			var i_130237 = 0;
			F.line = 3527;
			var colontmp__130267 = 0;
			F.line = 51;
			colontmp__130267 = (x_130194.kids != null ? x_130194.kids.length : 0);
			F.line = 3528;
			var i_130270 = 0;
			L3: do {
				F.line = 3529;
					L4: while (true) {
					if (!(i_130270 < colontmp__130267)) break L4;
						F.line = 3530;
						i_130237 = i_130270;
						F.line = 52;
						if (items_130198[items_130198_Idx] != null) { items_130198[items_130198_Idx].push(x_130194.kids[chckIndx(i_130237, 0, x_130194.kids.length+0-1)-0].heading); } else { items_130198[items_130198_Idx] = [x_130194.kids[chckIndx(i_130237, 0, x_130194.kids.length+0-1)-0].heading]; };
						F.line = 3531;
						i_130270 = addInt(i_130270, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 54;
				var i_130264 = 0;
				F.line = 3527;
				var colontmp__130273 = 0;
				F.line = 54;
				colontmp__130273 = (x_130194.kids != null ? x_130194.kids.length : 0);
				F.line = 3528;
				var i_130276 = 0;
				L6: do {
					F.line = 3529;
						L7: while (true) {
						if (!(i_130276 < colontmp__130273)) break L7;
							F.line = 3530;
							i_130264 = i_130276;
							F.line = 55;
							var it_130265 = x_130194.kids[chckIndx(i_130264, 0, x_130194.kids.length+0-1)-0];
							F.line = 56;
							extract_items_130192(it_130265, heading_130195, items_130198, items_130198_Idx);
							F.line = 3531;
							i_130276 = addInt(i_130276, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_27351(tag_27353, kids_27355) {
	var result_27356 = null;

	var F={procname:"karax.tree",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 103;
		result_27356 = document.createElement(toJSStr(tag_27353));
		L1: do {
			F.line = 104;
			var k_27395 = null;
			F.line = 2159;
			var i_27399 = 0;
			L2: do {
				F.line = 2160;
					L3: while (true) {
					if (!(i_27399 < (kids_27355 != null ? kids_27355.length : 0))) break L3;
						F.line = 2161;
						k_27395 = kids_27355[chckIndx(i_27399, 0, kids_27355.length+0-1)-0];
						F.line = 105;
						result_27356.appendChild(k_27395);
						F.line = 2162;
						i_27399 = addInt(i_27399, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_27356;

}

function text_27496(s_27498) {
	var result_27499 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 113;
		result_27499 = document.createTextNode(s_27498);
	framePtr = F.prev;

	return result_27499;

}

function set_attr_28341(e_28343, key_28344, value_28345) {
	var F={procname:"karax.setAttr",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 273;
		e_28343.setAttribute(key_28344, value_28345);
	framePtr = F.prev;

	
}

function sys_fatal_20437(message_20443) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 2827;
		var e_20445 = null;
		F.line = 2828;
		e_20445 = {m_type: NTI3850, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2829;
		e_20445.message = nimCopy(null, message_20443, NTI138);
		F.line = 2830;
		raiseException(e_20445, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_20432(msg_20434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3783;
		sys_fatal_20437(msg_20434);
	framePtr = F.prev;

	
}

function failed_assert_impl_20481(msg_20483) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3790;
		raise_assert_20432(msg_20483);
	framePtr = F.prev;

	
}

function uncovered_131029(x_131031) {
			var Tmp1;
		var Tmp2;

	var result_131032 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_131031.kids != null ? x_131031.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_131031.heading == null));			}		if (Tmp1) {
		F.line = 162;
		if (!(x_131031.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_131031;
		}
		else {
		Tmp2 = null;
		}
		
		result_131032 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 163;
		result_131032 = {heading: x_131031.heading, kids: nimCopy(null, [], NTI131065), sortId: x_131031.sortId, doSort: x_131031.doSort};
		L3: do {
			F.line = 165;
			var i_131082 = 0;
			F.line = 3527;
			var colontmp__131114 = 0;
			F.line = 165;
			colontmp__131114 = (x_131031.kids != null ? x_131031.kids.length : 0);
			F.line = 3528;
			var i_131117 = 0;
			L4: do {
				F.line = 3529;
					L5: while (true) {
					if (!(i_131117 < colontmp__131114)) break L5;
						F.line = 3530;
						i_131082 = i_131117;
						F.line = 166;
						var y_131083 = uncovered_131029(x_131031.kids[chckIndx(i_131082, 0, x_131031.kids.length+0-1)-0]);
						if (!((y_131083 == null))) {
						F.line = 167;
						if (result_131032.kids != null) { result_131032.kids.push(y_131083); } else { result_131032.kids = [y_131083]; };
						}
						
						F.line = 3531;
						i_131117 = addInt(i_131117, 1);
					}
			} while(false);
		} while(false);
		if (((result_131032.kids != null ? result_131032.kids.length : 0) == 0)) {
		F.line = 168;
		result_131032 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_131032;

}

function merge_tocs_131132(orig_131134, news_131135) {
	var result_131136 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 171;
		result_131136 = uncovered_131029(orig_131134);
		if ((result_131136 == null)) {
		F.line = 173;
		result_131136 = news_131135;
		}
		else {
			L1: do {
				F.line = 175;
				var i_131164 = 0;
				F.line = 3527;
				var colontmp__131176 = 0;
				F.line = 175;
				colontmp__131176 = (news_131135.kids != null ? news_131135.kids.length : 0);
				F.line = 3528;
				var i_131179 = 0;
				L2: do {
					F.line = 3529;
						L3: while (true) {
						if (!(i_131179 < colontmp__131176)) break L3;
							F.line = 3530;
							i_131164 = i_131179;
							F.line = 176;
							if (result_131136.kids != null) { result_131136.kids.push(news_131135.kids[chckIndx(i_131164, 0, news_131135.kids.length+0-1)-0]); } else { result_131136.kids = [news_131135.kids[chckIndx(i_131164, 0, news_131135.kids.length+0-1)-0]]; };
							F.line = 3531;
							i_131179 = addInt(i_131179, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_131136;

}

function build_toc_131194(orig_131196, types_131198, procs_131199) {
	var result_131200 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 179;
		var new_stuff_131216 = {heading: null, kids: nimCopy(null, [], NTI131215), doSort: true, sortId: 0};
		L1: do {
			F.line = 180;
			var t_131415 = null;
			F.line = 3822;
			var i_131499 = 0;
			F.line = 3823;
			var l_131501 = (types_131198 != null ? types_131198.length : 0);
			L2: do {
				F.line = 3824;
					L3: while (true) {
					if (!(i_131499 < l_131501)) break L3;
						F.line = 3825;
						t_131415 = types_131198[chckIndx(i_131499, 0, types_131198.length+0-1)-0];
						F.line = 181;
						var c_131431 = {heading: t_131415.cloneNode(true), kids: nimCopy(null, [], NTI131430), doSort: true, sortId: 0};
						F.line = 182;
						t_131415.__karaxMarker__ = true;
						L4: do {
							F.line = 183;
							var p_131440 = null;
							F.line = 3822;
							var i_131494 = 0;
							F.line = 3823;
							var l_131496 = (procs_131199 != null ? procs_131199.length : 0);
							L5: do {
								F.line = 3824;
									L6: while (true) {
									if (!(i_131494 < l_131496)) break L6;
										F.line = 3825;
										p_131440 = procs_131199[chckIndx(i_131494, 0, procs_131199.length+0-1)-0];
										if (!(p_131440.hasOwnProperty('__karaxMarker__'))) {
										F.line = 185;
										var xx_131441 = p_131440.parentNode.getElementsByClassName("attachedType");
										if ((((xx_131441 != null ? xx_131441.length : 0) == 1) && (xx_131441[chckIndx(0, 0, xx_131441.length+0-1)-0].textContent == t_131415.textContent))) {
										F.line = 188;
										var q_131451 = tree_27351(makeNimstrLit("A"), [text_27496(p_131440.title)]);
										F.line = 189;
										set_attr_28341(q_131451, "href", p_131440.getAttribute("href"));
										F.line = 190;
										if (c_131431.kids != null) { c_131431.kids.push({heading: q_131451, kids: nimCopy(null, [], NTI131466), sortId: 0, doSort: false}); } else { c_131431.kids = [{heading: q_131451, kids: nimCopy(null, [], NTI131466), sortId: 0, doSort: false}]; };
										F.line = 191;
										p_131440.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 3826;
										i_131494 = addInt(i_131494, 1);
										if (!(((procs_131199 != null ? procs_131199.length : 0) == l_131496))) {
										F.line = 3827;
										failed_assert_impl_20481(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 192;
						if (new_stuff_131216.kids != null) { new_stuff_131216.kids.push(c_131431); } else { new_stuff_131216.kids = [c_131431]; };
						F.line = 3826;
						i_131499 = addInt(i_131499, 1);
						if (!(((types_131198 != null ? types_131198.length : 0) == l_131501))) {
						F.line = 3827;
						failed_assert_impl_20481(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 193;
		result_131200 = merge_tocs_131132(orig_131196, new_stuff_131216);
	framePtr = F.prev;

	return result_131200;

}

function add_27514(parent_27516, kid_27517) {
			var Tmp1;
				var Tmp2;

	var F={procname:"karax.add",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
			if (!(parent_27516.nodeName == "TR")) Tmp1 = false; else {				if ((kid_27517.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_27517.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 117;
		var k_27518 = document.createElement("TD");
		F.line = 118;
		k_27518.appendChild(kid_27517);
		F.line = 119;
		parent_27516.appendChild(k_27518);
		}
		else {
			F.line = 121;
		parent_27516.appendChild(kid_27517);
		}
		
	framePtr = F.prev;

	
}

function set_class_28324(e_28326, value_28327) {
	var F={procname:"karax.setClass",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 270;
		e_28326.setAttribute("class", toJSStr(value_28327));
	framePtr = F.prev;

	
}

function to_html_130291(x_130293, is_root_130294) {
			var Tmp1;

		function HEX3Aanonymous_130345(a_130347, b_130348) {
					var Tmp1;

			var result_130349 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_130347.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_130348.heading == null));					}				if (Tmp1) {
				F.line = 74;
				var x_130372 = a_130347.heading.textContent;
				F.line = 75;
				var y_130373 = b_130348.heading.textContent;
				if ((x_130372 < y_130373)) {
				F.line = 76;
				result_130349 = -1;
				break BeforeRet;
				}
				
				if ((y_130373 < x_130372)) {
				F.line = 77;
				result_130349 = 1;
				break BeforeRet;
				}
				
				F.line = 78;
				result_130349 = 0;
				break BeforeRet;
				}
				else {
					F.line = 81;
					result_130349 = subInt(a_130347.sortId, b_130348.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_130349;

		}

	var result_130295 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_130293 == null)) {
		F.line = 59;
		result_130295 = null;
		break BeforeRet;
		}
		
		if (((x_130293.kids != null ? x_130293.kids.length : 0) == 0)) {
		if ((x_130293.heading == null)) {
		F.line = 61;
		result_130295 = null;
		break BeforeRet;
		}
		
		F.line = 62;
		result_130295 = x_130293.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 63;
		result_130295 = tree_27351(makeNimstrLit("DIV"), []);
			if (!!((x_130293.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_130293.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 65;
		add_27514(result_130295, x_130293.heading.cloneNode(true));
		}
		
		F.line = 66;
		var ul_130342 = tree_27351(makeNimstrLit("UL"), []);
		if (is_root_130294) {
		F.line = 68;
		set_class_28324(ul_130342, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 70;
		set_class_28324(ul_130342, makeNimstrLit("simple"));
		}
		
		if (x_130293.doSort) {
		F.line = 72;
		x_130293.kids.sort(HEX3Aanonymous_130345);
		}
		
		L2: do {
			F.line = 83;
			var k_130615 = null;
			F.line = 3820;
			var colontmp__130633 = null;
			F.line = 83;
			colontmp__130633 = x_130293.kids;
			F.line = 3822;
			var i_130636 = 0;
			F.line = 3823;
			var l_130638 = (colontmp__130633 != null ? colontmp__130633.length : 0);
			L3: do {
				F.line = 3824;
					L4: while (true) {
					if (!(i_130636 < l_130638)) break L4;
						F.line = 3825;
						k_130615 = colontmp__130633[chckIndx(i_130636, 0, colontmp__130633.length+0-1)-0];
						F.line = 84;
						var y_130616 = to_html_130291(k_130615, false);
						if (!((y_130616 == null))) {
						F.line = 86;
						add_27514(ul_130342, tree_27351(makeNimstrLit("LI"), [y_130616]));
						}
						
						F.line = 3826;
						i_130636 = addInt(i_130636, 1);
						if (!(((colontmp__130633 != null ? colontmp__130633.length : 0) == l_130638))) {
						F.line = 3827;
						failed_assert_impl_20481(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_130342.childNodes.length == 0))) {
		F.line = 87;
		add_27514(result_130295, ul_130342);
		}
		
		if ((result_130295.childNodes.length == 0)) {
		F.line = 88;
		result_130295 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_130295;

}

function replace_by_id_27162(id_27164, new_tree_27165) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 54;
		var x_27166 = document.getElementById(id_27164);
		F.line = 55;
		x_27166.parentNode.replaceChild(new_tree_27165, x_27166);
		F.line = 56;
		new_tree_27165.id = id_27164;
	framePtr = F.prev;

	
}

function togglevis_131529(d_131531) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 198;
		    if (d_131531.style.display == 'none')
      d_131531.style.display = 'inline';
    else
      d_131531.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_131547) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 206;
		var toc_131548 = document.getElementById("toc-list");
		if ((alternative_131515[0] === null)) {
		F.line = 208;
		var tt_131571 = {heading: null, kids: nimCopy(null, [], NTI131570), sortId: 0, doSort: false};
		F.line = 209;
		to_toc_130686(toc_131548, tt_131571);
		F.line = 210;
		tt_131571 = tt_131571.kids[chckIndx(0, 0, tt_131571.kids.length+0-1)-0];
		F.line = 212;
		var types_131588 = [nimCopy(null, [], NTI131587)];
		F.line = 213;
		var procs_131605 = [nimCopy(null, [], NTI131604)];
		F.line = 215;
		extract_items_130192(tt_131571, "Types", types_131588, 0);
		F.line = 216;
		extract_items_130192(tt_131571, "Procs", procs_131605, 0);
		F.line = 217;
		extract_items_130192(tt_131571, "Converters", procs_131605, 0);
		F.line = 218;
		extract_items_130192(tt_131571, "Methods", procs_131605, 0);
		F.line = 219;
		extract_items_130192(tt_131571, "Templates", procs_131605, 0);
		F.line = 220;
		extract_items_130192(tt_131571, "Macros", procs_131605, 0);
		F.line = 221;
		extract_items_130192(tt_131571, "Iterators", procs_131605, 0);
		F.line = 223;
		var ntoc_131613 = build_toc_131194(tt_131571, types_131588[0], procs_131605[0]);
		F.line = 224;
		var x_131614 = to_html_130291(ntoc_131613, true);
		F.line = 225;
		alternative_131515[0] = tree_27351(makeNimstrLit("DIV"), [x_131614]);
		}
		
		if ((value_131547 == "type")) {
		F.line = 227;
		replace_by_id_27162("tocRoot", alternative_131515[0]);
		}
		else {
			F.line = 229;
		replace_by_id_27162("tocRoot", tree_27351(makeNimstrLit("DIV"), []));
		}
		
		F.line = 230;
		togglevis_131529(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_131636 = [null];
var contents_131638 = [null];
var oldtoc_131869 = [null];
var timer_131870 = [null];

function raiseRangeError() {
		var e_16125 = null;
		e_16125 = {m_type: NTI3862, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16125.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_16125.parent = null;
		raiseException(e_16125, "RangeError");

	
}

function nsuToLowerAsciiChar(c_111213) {
	var result_111214 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_111213] != undefined)) {
		F.line = 212;
		result_111214 = chckRange(addInt(c_111213, 32), 0, 255);
		}
		else {
			F.line = 214;
			result_111214 = c_111213;
		}
		
	framePtr = F.prev;

	return result_111214;

}

function fuzzy_match_129044(pattern_129046, str_129047) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_129051 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_129052 = -100;
		F.line = 38;
		var header_matched_129053 = false;
		F.line = 39;
		var unmatched_leading_char_count_129055 = 0;
		F.line = 40;
		var consecutive_match_count_129057 = 0;
		F.line = 41;
		var str_index_129059 = 0;
		F.line = 42;
		var pat_index_129061 = 0;
		F.line = 43;
		var score_129063 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_129059 < (str_129047 != null ? str_129047.length : 0)) && (pat_index_129061 < (pattern_129046 != null ? pattern_129046.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_129070 = nsuToLowerAsciiChar(pattern_129046.charCodeAt(chckIndx(pat_index_129061, 0, pattern_129046.length+0-1)-0));
						F.line = 52;
						var str_char_129071 = nsuToLowerAsciiChar(str_129047.charCodeAt(chckIndx(str_index_129059, 0, str_129047.length+0-1)-0));
						if ((ConstSet3[pattern_char_129070] != undefined)) {
						F.line = 56;
						pat_index_129061 = addInt(pat_index_129061, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_129071] != undefined)) {
						F.line = 59;
						str_index_129059 = addInt(str_index_129059, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_129053) && (str_char_129071 == 58))) {
						F.line = 65;
						header_matched_129053 = true;
						F.line = 66;
						score_state_129052 = -100;
						F.line = 67;
						score_129063 = Math.trunc(Math.floor((5.0000000000000000e-01 * score_129063)));
						F.line = 68;
						pat_index_129061 = 0;
						F.line = 69;
						str_index_129059 = addInt(str_index_129059, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_129071 == pattern_char_129070)) {
						F.line = 73;
						switch (score_state_129052) {
						case -100:
						case 20:
							F.line = 75;
							score_state_129052 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_129052 = 5;
							F.line = 78;
							score_129063 = addInt(score_129063, score_state_129052);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_129057 = addInt(consecutive_match_count_129057, 1);
							F.line = 82;
							score_state_129052 = 5;
							F.line = 83;
							score_129063 = addInt(score_129063, mulInt(5, consecutive_match_count_129057));
							if ((score_state_129052 == 10)) {
							F.line = 86;
							score_129063 = addInt(score_129063, 10);
							}
							
							F.line = 88;
							var on_boundary_129182 = (pat_index_129061 == (pattern_129046 != null ? (pattern_129046.length-1) : -1));
							if ((!(on_boundary_129182) && (str_index_129059 < (str_129047 != null ? (str_129047.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_129183 = nsuToLowerAsciiChar(pattern_129046.charCodeAt(chckIndx(addInt(pat_index_129061, 1), 0, pattern_129046.length+0-1)-0));
							F.line = 92;
							var next_str_char_129184 = nsuToLowerAsciiChar(str_129047.charCodeAt(chckIndx(addInt(str_index_129059, 1), 0, str_129047.length+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_129184] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_129184 == next_pattern_char_129183));							}							on_boundary_129182 = Tmp4;
							}
							
							if (on_boundary_129182) {
							F.line = 100;
							score_state_129052 = 20;
							F.line = 100;
							score_129063 = addInt(score_129063, score_state_129052);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_129047.charCodeAt(chckIndx(subInt(str_index_129059, 1), 0, str_129047.length+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_129047.charCodeAt(chckIndx(subInt(str_index_129059, 1), 0, str_129047.length+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_129047.charCodeAt(chckIndx(str_index_129059, 0, str_129047.length+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_129239 = Tmp5;
							if (is_leading_char_129239) {
							F.line = 110;
							score_state_129052 = 10;
							}
							else {
								F.line = 114;
								score_state_129052 = 0;
								F.line = 114;
								score_129063 = addInt(score_129063, score_state_129052);
							}
							
							break;
						}
						F.line = 115;
						pat_index_129061 = addInt(pat_index_129061, 1);
						}
						else {
							F.line = 118;
							switch (score_state_129052) {
							case -100:
								F.line = 120;
								score_state_129052 = -3;
								F.line = 120;
								score_129063 = addInt(score_129063, score_state_129052);
								break;
							case 5:
								F.line = 123;
								score_state_129052 = -1;
								F.line = 123;
								score_129063 = addInt(score_129063, score_state_129052);
								F.line = 124;
								consecutive_match_count_129057 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_129055 < 3)) {
								F.line = 128;
								score_state_129052 = -3;
								F.line = 128;
								score_129063 = addInt(score_129063, score_state_129052);
								}
								
								F.line = 129;
								unmatched_leading_char_count_129055 = addInt(unmatched_leading_char_count_129055, 1);
								break;
							default: 
								F.line = 132;
								score_state_129052 = -1;
								F.line = 132;
								score_129063 = addInt(score_129063, score_state_129052);
								break;
							}
						}
						
						F.line = 134;
						str_index_129059 = addInt(str_index_129059, 1);
					} while(false);
				}
		} while(false);
		F.line = 136;
		nimCopy(result_129051, {Field0: nimMax(0, score_129063), Field1: (0 < score_129063)}, NTI129048);
	framePtr = F.prev;

	return result_129051;

}

function text_27478(s_27480) {
	var result_27481 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 112;
		result_27481 = document.createTextNode(toJSStr(s_27480));
	framePtr = F.prev;

	return result_27481;

}

function dosearch_131656(value_131658) {

		function HEX3Aanonymous_131760(a_131770, b_131772) {
			var result_131778 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 274;
				result_131778 = subInt(b_131772["Field1"], a_131770["Field1"]);
			framePtr = F.prev;

			return result_131778;

		}

	var result_131659 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_131636[0] != null ? db_131636[0].length : 0) == 0)) {
		F.line = 240;
		var stuff_131667 = null;
		F.line = 241;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_131667 = doc.documentElement;
    
		F.line = 254;
		db_131636[0] = nimCopy(null, stuff_131667.getElementsByClassName("reference"), NTI27057);
		F.line = 255;
		contents_131638[0] = nimCopy(null, [], NTI131682);
		L1: do {
			F.line = 256;
			var ahref_131691 = null;
			F.line = 3822;
			var i_131838 = 0;
			F.line = 3823;
			var l_131840 = (db_131636[0] != null ? db_131636[0].length : 0);
			L2: do {
				F.line = 3824;
					L3: while (true) {
					if (!(i_131838 < l_131840)) break L3;
						F.line = 3825;
						ahref_131691 = db_131636[0][chckIndx(i_131838, 0, db_131636[0].length+0-1)-0];
						F.line = 257;
						if (contents_131638[0] != null) { contents_131638[0].push(ahref_131691.getAttribute("data-doc-search-tag")); } else { contents_131638[0] = [ahref_131691.getAttribute("data-doc-search-tag")]; };
						F.line = 3826;
						i_131838 = addInt(i_131838, 1);
						if (!(((db_131636[0] != null ? db_131636[0].length : 0) == l_131840))) {
						F.line = 3827;
						failed_assert_impl_20481(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 258;
		var ul_131705 = tree_27351(makeNimstrLit("UL"), []);
		F.line = 259;
		result_131659 = tree_27351(makeNimstrLit("DIV"), []);
		F.line = 260;
		set_class_28324(result_131659, makeNimstrLit("search_results"));
		F.line = 261;
		var matches_131726 = nimCopy(null, [], NTI131725);
		L4: do {
			F.line = 262;
			var i_131743 = 0;
			F.line = 3527;
			var colontmp__131845 = 0;
			F.line = 262;
			colontmp__131845 = (db_131636[0] != null ? db_131636[0].length : 0);
			F.line = 3528;
			var i_131848 = 0;
			L5: do {
				F.line = 3529;
					L6: while (true) {
					if (!(i_131848 < colontmp__131845)) break L6;
						F.line = 3530;
						i_131743 = i_131848;
						L7: do {
							F.line = 263;
							var c_131744 = contents_131638[0][chckIndx(i_131743, 0, contents_131638[0].length+0-1)-0];
							if (((c_131744 == "Examples") || (c_131744 == "PEG construction"))) {
							F.line = 268;
							break L7;
							}
							
							F.line = 269;
							var colontmp__131943 = {Field0: 0, Field1: false};
							F.line = 269;
							var score_131745 = 0;
							F.line = 269;
							var matched_131746 = false;
							F.line = 269;
							nimCopy(colontmp__131943, fuzzy_match_129044(value_131658, c_131744), NTI129048);
							F.line = 269;
							score_131745 = colontmp__131943["Field0"];
							F.line = 269;
							matched_131746 = colontmp__131943["Field1"];
							if (matched_131746) {
							F.line = 271;
							if (matches_131726 != null) { matches_131726.push({Field0: db_131636[0][chckIndx(i_131743, 0, db_131636[0].length+0-1)-0], Field1: score_131745}); } else { matches_131726 = [{Field0: db_131636[0][chckIndx(i_131743, 0, db_131636[0].length+0-1)-0], Field1: score_131745}]; };
							}
							
						} while(false);
						F.line = 3531;
						i_131848 = addInt(i_131848, 1);
					}
			} while(false);
		} while(false);
		F.line = 273;
		matches_131726.sort(HEX3Aanonymous_131760);
		L8: do {
			F.line = 275;
			var i_131828 = 0;
			F.line = 3527;
			var colontmp__131851 = 0;
			F.line = 275;
			colontmp__131851 = nimMin((matches_131726 != null ? matches_131726.length : 0), 19);
			F.line = 3528;
			var i_131854 = 0;
			L9: do {
				F.line = 3529;
					L10: while (true) {
					if (!(i_131854 < colontmp__131851)) break L10;
						F.line = 3530;
						i_131828 = i_131854;
						F.line = 276;
						matches_131726[chckIndx(i_131828, 0, matches_131726.length+0-1)-0]["Field0"].innerHTML = matches_131726[chckIndx(i_131828, 0, matches_131726.length+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 277;
						add_27514(ul_131705, tree_27351(makeNimstrLit("LI"), [matches_131726[chckIndx(i_131828, 0, matches_131726.length+0-1)-0]["Field0"]]));
						F.line = 3531;
						i_131854 = addInt(i_131854, 1);
					}
			} while(false);
		} while(false);
		if ((ul_131705.childNodes.length == 0)) {
		F.line = 279;
		add_27514(result_131659, tree_27351(makeNimstrLit("B"), [text_27478(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 281;
			add_27514(result_131659, tree_27351(makeNimstrLit("B"), [text_27478(makeNimstrLit("search results"))]));
			F.line = 282;
			add_27514(result_131659, ul_131705);
		}
		
	framePtr = F.prev;

	return result_131659;

}

function search() {

		function wrapper_131886() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 289;
				var elem_131888 = document.getElementById("searchInput");
				F.line = 290;
				var value_131889 = elem_131888.value;
				if (!(((value_131889 != null ? value_131889.length : 0) == 0))) {
				if ((oldtoc_131869[0] === null)) {
				F.line = 293;
				oldtoc_131869[0] = document.getElementById("tocRoot");
				}
				
				F.line = 294;
				var results_131897 = dosearch_131656(value_131889);
				F.line = 295;
				replace_by_id_27162("tocRoot", results_131897);
				}
				else {
				if (!((oldtoc_131869[0] === null))) {
				F.line = 297;
				replace_by_id_27162("tocRoot", oldtoc_131869[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_131870[0] == null))) {
		F.line = 299;
		clearTimeout(timer_131870[0]);
		}
		
		F.line = 300;
		timer_131870[0] = setTimeout(wrapper_131886, 400);
	framePtr = F.prev;

	
}
